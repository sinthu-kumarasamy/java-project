/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HealthDivision;


import Business.HealthDepartment.HealthDepartment;
import Business.HealthDepartment.PatientDirectory;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sindhu
 */
public class DoctorWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaPanel
     */
   
     JPanel userProcessContainer;
     HealthDepartment health;
      PatientDirectory patient;
      String emp_id = null;String emp_name=null;
      enum status{
          Assigned,
          Completed,
          Inprogress
      }
    
    public DoctorWorkAreaPanel(JPanel userProcessContainer,String emp_id,String emp_name) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.health = new HealthDepartment();
        this.patient = new PatientDirectory();
        this.emp_id = emp_id;
        this.emp_name = emp_name;
        patientTable.getTableHeader().setFont(new Font("Times New Roman",Font.BOLD,18));
        patientTable.setRowHeight(30);
       patientTable.setRowMargin(10);
        populateTable();
        populateComboBox();
         DoctorLabelName.setText("Hello User:"+emp_name);
    }
    
    private void populateComboBox(){
        availabeAssitant.removeAllItems();
        for(HealthDepartment hel:health.getDetails()){
            if(hel.getRole().equals("Assistant")){
                availabeAssitant.addItem(hel.getEmp_id()+"-"+hel.getUser_name());
            }
        }
            
    }
    
    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)patientTable.getModel();
        dtm.setRowCount(0);
         MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("TestDB");
        DBCollection userCollection = db.getCollection("PatientDetails");
        DBCursor cursor = null;
        cursor = userCollection.find();
        dtm.setRowCount(0);
        while(cursor.hasNext()){
            Object[] row = new Object[dtm.getColumnCount()];
            DBObject obj = cursor.next();
            if(obj.get("DoctorId").equals(emp_id)){
                row[0] = obj.get("_id");
                row[1] = obj.get("Name");
                row[2] = obj.get("Status");
                row[3] = obj.get("HealthIssue");
                dtm.addRow(row);
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        availabeAssitant = new javax.swing.JComboBox<>();
        assignBtn = new javax.swing.JButton();
        checkBtn = new javax.swing.JButton();
        imgLabel = new javax.swing.JLabel();
        DoctorLabelName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        patientTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        patientTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Id", "Patient name", "Status", "Health Issue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setRowHeight(20);
        patientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                patientTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(patientTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(260, 220, 660, 170);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Available Assistant:");
        add(jLabel1);
        jLabel1.setBounds(410, 450, 160, 22);

        availabeAssitant.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        availabeAssitant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        availabeAssitant.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(153, 0, 51)));
        availabeAssitant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availabeAssitantActionPerformed(evt);
            }
        });
        add(availabeAssitant);
        availabeAssitant.setBounds(580, 450, 110, 30);

        assignBtn.setBackground(new java.awt.Color(102, 102, 0));
        assignBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        assignBtn.setText("Assign Assistant");
        assignBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignBtnActionPerformed(evt);
            }
        });
        add(assignBtn);
        assignBtn.setBounds(660, 560, 197, 40);

        checkBtn.setBackground(new java.awt.Color(102, 102, 0));
        checkBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        checkBtn.setText("Checkup done");
        checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBtnActionPerformed(evt);
            }
        });
        add(checkBtn);
        checkBtn.setBounds(310, 560, 180, 40);

        imgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(imgLabel);
        imgLabel.setBounds(1280, 620, 0, 190);

        DoctorLabelName.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        DoctorLabelName.setText("jLabel2");
        add(DoctorLabelName);
        DoctorLabelName.setBounds(30, 30, 370, 40);

        jLabel6.setFont(new java.awt.Font("Sylfaen", 1, 24)); // NOI18N
        jLabel6.setText("Your Patients");
        add(jLabel6);
        jLabel6.setBounds(520, 120, 180, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void availabeAssitantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availabeAssitantActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_availabeAssitantActionPerformed

    private void assignBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)patientTable.getModel();
        int selectedRow = patientTable.getSelectedRow();
        MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("TestDB");
        DBCollection userCollection = db.getCollection("PatientDetails");
        BasicDBObject queryObj = new BasicDBObject();
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }
        else{
             String patient_id = (String) patientTable.getValueAt(selectedRow,0);
            String assis_name = availabeAssitant.getSelectedItem().toString();
            String id[] = assis_name.split("-");
            queryObj.put("_id", patient_id);
            BasicDBObject newObj = new BasicDBObject();
            newObj.put("$set", new BasicDBObject().append("Status", status.Inprogress.toString()).append("AssistantId", id[0])); 
            userCollection.update(queryObj, newObj);
            populateTable();
            JOptionPane.showMessageDialog(null, "Patient assigned to an assistant", "Success",JOptionPane.PLAIN_MESSAGE);
          
        }
    }//GEN-LAST:event_assignBtnActionPerformed

    private void checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)patientTable.getModel();
        int selectedRow = patientTable.getSelectedRow();
        MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("TestDB");
        DBCollection userCollection = db.getCollection("PatientDetails");
        DBCollection patientDetails = db.getCollection("BeneficiaryDetails");
        BasicDBObject queryObj = new BasicDBObject();
        BasicDBObject queryObj1 = new BasicDBObject();
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }else{
            String healthissue = JOptionPane.showInputDialog(null,"Update health issue for this patient");
           String patient_id = (String) patientTable.getValueAt(selectedRow,0);
            queryObj.put("_id", patient_id);
            queryObj1.put("_id", patient_id);
            BasicDBObject newObj = new BasicDBObject();
            BasicDBObject newObj1 = new BasicDBObject();
            newObj.put("$set", new BasicDBObject().append("Status", status.Completed.toString()).append("HealthIssue", healthissue)); 
            newObj1.put("$set", new BasicDBObject().append("Status", status.Assigned.toString())); 
            userCollection.update(queryObj, newObj);
            patientDetails.update(queryObj1, newObj1);
            populateTable();
            JOptionPane.showMessageDialog(null, "Checkup Completed successfully", "Success",JOptionPane.PLAIN_MESSAGE);         
            
        }
       
    }//GEN-LAST:event_checkBtnActionPerformed

    private void patientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patientTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_patientTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DoctorLabelName;
    private javax.swing.JButton assignBtn;
    private javax.swing.JComboBox<String> availabeAssitant;
    private javax.swing.JButton checkBtn;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientTable;
    // End of variables declaration//GEN-END:variables
}
