/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HealthDivision;


import Business.HealthDepartment.HealthDepartment;
import Business.HealthDepartment.PatientDirectory;
import Business.WelfareDepartment.BeneficiaryDirectory;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class ManagePatientWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePatientWorkAreaPanel
     */
   
   
        JPanel userProcessContainer;
        HealthDepartment health;
        PatientDirectory patient;
        String emp_name=null;
        enum status{
            Pending
        }
    
    public ManagePatientWorkAreaPanel(JPanel userProcessContainer,String emp_name) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.emp_name = emp_name;
         this.health = new HealthDepartment();
         this.patient = new PatientDirectory();
        patientTable.getTableHeader().setFont(new Font("TImes New Roman",Font.BOLD,18));
        patientTable.setRowHeight(30);
      patientTable.setRowMargin(10);
        populateTable();
        populateDoctorCombo();
        ManagerLabelName.setText("Hello User:"+emp_name);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void populateDoctorCombo(){
        DoctorComboBox.removeAllItems();
        for(HealthDepartment hel:health.getDetails()){
            if(hel.getRole().equals("Doctor")){
                DoctorComboBox.addItem(hel.getEmp_id()+"-"+hel.getUser_name());   
            }
        }
    }
     private void populateTable(){
        DefaultTableModel model = (DefaultTableModel) patientTable.getModel(); 
        MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("TestDB");
        DBCollection userCollection = db.getCollection("PatientDetails");
        DBCursor cursor = null;
        cursor = userCollection.find();
        model.setRowCount(0);
        while(cursor.hasNext()){
            Object[] row = new Object[model.getColumnCount()];
            DBObject obj = cursor.next();
            row[0] = obj.get("_id");
            row[1] = obj.get("Name");
            row[2] = obj.get("City");
            row[3] = obj.get("Status");
            row[4] = obj.get("HealthIssue");
            model.addRow(row);
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        DoctorComboBox = new javax.swing.JComboBox<>();
        assigndocbtn = new javax.swing.JButton();
        imgLabel = new javax.swing.JLabel();
        ManagerLabelName = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(null);

        patientTable.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Id", "Patient Name", "City", "Status", "HealthIssue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setRowHeight(20);
        jScrollPane1.setViewportView(patientTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(560, 200, 507, 144);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Available Doctor:");
        add(jLabel1);
        jLabel1.setBounds(660, 390, 190, 22);

        DoctorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DoctorComboBox.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(153, 153, 0)));
        DoctorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorComboBoxActionPerformed(evt);
            }
        });
        add(DoctorComboBox);
        DoctorComboBox.setBounds(860, 390, 110, 30);

        assigndocbtn.setBackground(new java.awt.Color(153, 153, 0));
        assigndocbtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        assigndocbtn.setText("Assign Doctor");
        assigndocbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assigndocbtnActionPerformed(evt);
            }
        });
        add(assigndocbtn);
        assigndocbtn.setBounds(770, 470, 150, 40);

        imgLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(imgLabel);
        imgLabel.setBounds(620, 650, 940, 170);

        ManagerLabelName.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        ManagerLabelName.setText("jLabel2");
        add(ManagerLabelName);
        ManagerLabelName.setBounds(50, 50, 400, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void assigndocbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assigndocbtnActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)patientTable.getModel();
        int selectedRow = patientTable.getSelectedRow();
        MongoClient mongoClient = new MongoClient("localhost", 27017); 
        DB db = mongoClient.getDB("TestDB");
        DBCollection userCollection = db.getCollection("PatientDetails");
        BasicDBObject queryObj = new BasicDBObject();
        if(selectedRow <0 ){
            JOptionPane.showMessageDialog(null, "Please select a row", "Warning!",JOptionPane.WARNING_MESSAGE);
        }
        else{
             String patient_id = (String) patientTable.getValueAt(selectedRow,0);
              String doctor_name = DoctorComboBox.getSelectedItem().toString();
               String id[] = doctor_name.split("-");
             queryObj.put("_id", patient_id);
             BasicDBObject newObj = new BasicDBObject();
             newObj.put("$set", new BasicDBObject().append("Status", status.Pending.toString()).append("DoctorId", id[0]));
             userCollection.update(queryObj, newObj);
             populateTable();
            JOptionPane.showMessageDialog(null, "Assigned Doctor for this patient", "Suceess",JOptionPane.PLAIN_MESSAGE);      
          }
    }//GEN-LAST:event_assigndocbtnActionPerformed

    private void DoctorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DoctorComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DoctorComboBox;
    private javax.swing.JLabel ManagerLabelName;
    private javax.swing.JButton assigndocbtn;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable patientTable;
    // End of variables declaration//GEN-END:variables
}
